{"version":3,"file":"isSubscribed.js","sources":["../../src/subscriptions.js","../../src/isSubscribed.js"],"sourcesContent":["// @flow\n\nimport type {Disposable} from \"react-relay\";\nimport type {Notifier} from \"@absinthe/socket\";\n\nconst subscriptions: WeakMap<\n  Disposable,\n  Promise<Notifier<any>>\n> = new WeakMap();\n\nexport default subscriptions;\n","// @flow\n\nimport {booleanize} from \"@jumpn/utils-promise\";\n\nimport type {Disposable} from \"react-relay\";\n\nimport subscriptions from \"./subscriptions\";\n\n/**\n * Returns a promise that resolves to `true` in case subscription of given\n * disposable has started or to `false` otherwise\n */\nconst isSubscribed = (disposable: Disposable): Promise<boolean> => {\n  const maybeSubscription = subscriptions.get(disposable);\n\n  return maybeSubscription\n    ? booleanize(maybeSubscription)\n    : Promise.resolve(false);\n};\n\nexport default isSubscribed;\n"],"names":["subscriptions","WeakMap","isSubscribed","disposable","maybeSubscription","get","booleanize","Promise","resolve"],"mappings":";;;;;;;;;;;;;;;AAKA,IAAMA,aAGL,GAAG,IAAIC,OAAJ,EAHJ;;;ACGA;;;;;IAIMC,YAAY,GAAG,sBAACC,UAAD,EAA8C;AAAA;;AACjE,MAAMC,iBAAiB,GAAGJ,aAAa,CAACK,GAAd,CAAkBF,UAAlB,CAA1B;AAEA,SAAOC,iBAAiB,GACpBE,uBAAU,CAACF,iBAAD,CADU,GAEpBG,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAFJ;AAGD,CANiB;;;;"}