{"version":3,"file":"index.js","sources":["../../src/createFetcher.js","../../src/subscriptions.js","../../src/createSubscriber.js","../../src/isSubscribed.js"],"sourcesContent":["// @flow\n\nimport {observe, send} from \"@absinthe/socket\";\n\nimport type {AbsintheSocket} from \"@absinthe/socket\";\nimport type {FetchFunction} from \"react-relay\";\n\n/**\n * Creates a Fetcher (Relay FetchFunction) using the given AbsintheSocket\n * instance\n */\nconst createFetcher = (\n  absintheSocket: AbsintheSocket,\n  onError?: (error: Error) => any\n): FetchFunction => ({text: operation}, variables) =>\n  new Promise((resolve, reject) =>\n    // $FlowFixMe: operation is always defined\n    observe(absintheSocket, send(absintheSocket, {operation, variables}), {\n      onError,\n      onAbort: reject,\n      onResult: resolve\n    })\n  );\n\nexport default createFetcher;\n","// @flow\n\nimport type {Disposable} from \"react-relay\";\nimport type {Notifier} from \"@absinthe/socket\";\n\nconst subscriptions: WeakMap<\n  Disposable,\n  Promise<Notifier<any>>\n> = new WeakMap();\n\nexport default subscriptions;\n","// @flow\n\nimport notifierFind from \"@absinthe/socket/dist/notifier/find\";\nimport {observe, send, unobserveOrCancel} from \"@absinthe/socket\";\nimport {createDeferred} from \"@jumpn/utils-promise\";\nimport {getOperationType} from \"@jumpn/utils-graphql\";\n\nimport type {AbsintheSocket} from \"@absinthe/socket\";\nimport type {SubscribeFunction} from \"react-relay\";\n\nimport subscriptions from \"./subscriptions\";\n\nconst unobserveOrCancelIfNeeded = (absintheSocket, notifier, observer) => {\n  if (notifier) {\n    unobserveOrCancel(absintheSocket, notifier, observer);\n  }\n};\n\nconst createDisposable = (absintheSocket, {request}, observer) => ({\n  dispose: () =>\n    unobserveOrCancelIfNeeded(\n      absintheSocket,\n      notifierFind(absintheSocket.notifiers, \"request\", request),\n      observer\n    )\n});\n\nconst onStart = deferred => notifier => deferred.resolve(notifier);\n\nconst onAbort = (deferred, callback) => error => {\n  // callback is always defined but this is not correctly reflected in\n  // SubscribeFunction\n  callback && callback(error);\n\n  deferred.reject(error);\n};\n\n/**\n * Creates a Subscriber (Relay SubscribeFunction) using the given AbsintheSocket\n * instance\n */\nconst createSubscriber = (\n  absintheSocket: AbsintheSocket,\n  onRecoverableError?: (error: Error) => any\n): SubscribeFunction => (\n  {text: operation},\n  variables,\n  cacheConfig,\n  {onError: OnUnrecoverableError, onNext}\n) => {\n  // we need to place this logic here and not in ensureIsSubscription as if we\n  // do so, then flow is not able to infer we are validating operation\n  if (!operation || getOperationType(operation) !== \"subscription\") {\n    throw new Error(\n      `Expected subscription, but instead got:\\n${(operation: any)}`\n    );\n  }\n\n  const notifier = send(absintheSocket, {operation, variables});\n\n  const deferred = createDeferred();\n\n  const observer = {\n    onAbort: onAbort(deferred, OnUnrecoverableError),\n    onError: onRecoverableError,\n    onResult: (onNext: any),\n    onStart: onStart(deferred)\n  };\n\n  observe(absintheSocket, notifier, observer);\n\n  const disposable = createDisposable(absintheSocket, notifier, observer);\n\n  subscriptions.set(disposable, deferred.promise);\n\n  return disposable;\n};\n\nexport default createSubscriber;\n","// @flow\n\nimport {booleanize} from \"@jumpn/utils-promise\";\n\nimport type {Disposable} from \"react-relay\";\n\nimport subscriptions from \"./subscriptions\";\n\n/**\n * Returns a promise that resolves to `true` in case subscription of given\n * disposable has started or to `false` otherwise\n */\nconst isSubscribed = (disposable: Disposable): Promise<boolean> => {\n  const maybeSubscription = subscriptions.get(disposable);\n\n  return maybeSubscription\n    ? booleanize(maybeSubscription)\n    : Promise.resolve(false);\n};\n\nexport default isSubscribed;\n"],"names":["createFetcher","absintheSocket","onError","variables","operation","text","Promise","resolve","reject","observe","send","onAbort","onResult","subscriptions","WeakMap","unobserveOrCancelIfNeeded","notifier","observer","unobserveOrCancel","createDisposable","request","dispose","notifierFind","notifiers","onStart","deferred","callback","error","createSubscriber","onRecoverableError","cacheConfig","OnUnrecoverableError","onNext","getOperationType","Error","createDeferred","disposable","set","promise","isSubscribed","maybeSubscription","get","booleanize"],"mappings":"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"}